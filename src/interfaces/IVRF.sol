// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

/**
 * VRF System Interface for randomness
 */

interface IVRFSystem {
  /**
   * Starts a VRF random number request
   *
   * @param traceId Optional Id to use when tracing the request
   * @return requestId for the random number, will be passed to the callback contract
   */
  function requestRandomNumberWithTraceId(uint256 traceId) external returns (uint256);

  event RandomNumberRequested(
    uint256 indexed requestId, address indexed callbackAddress, uint256 indexed traceId
  );

  event RandomNumberDelivered(
    uint256 indexed requestId,
    address indexed callbackAddress,
    uint256 indexed traceId,
    uint256 roundNumber,
    uint256 randomNumber
  );
}

interface IVRFSystemCallback {
  /**
   * Callback for when a Random Number is delivered
   *
   * @param requestId     Id of the VRF request
   * @param randomNumber   Random number that was generated by the VRF
   */
  function randomNumberCallback(uint256 requestId, uint256 randomNumber) external;
} 